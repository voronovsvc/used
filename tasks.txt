У нашего наблонизатора осталась одна проблема. Обычно на сайте используется какой-то основной шаблон, 
в который входит шапка сайта (хедер), подвал сайта (футер) и между ними какое-то содержимое. 
Хедер и футер меняются очень редко, в основном меняется только общее содержимое страниц.
Вот посмотри на примере твоего сайта (http://joxi.ru/BA0a6YGcXXVNry)
Представь что наш проект имеет 100 страниц, для каждой страницы есть шаблон. 
В каждом шаблоне есть один и тот же хедер и футер. И неожиданно понадобилось поменять ссылки в хедере.
Придется пройтись по всем 100 шаблонам и отредактировать хедер. А это трындец как не круто.
Поэтому обычно используют основной шаблон (layout) с хедером, футером,
с секцией <head>, в которой подключены стили, скрипты и т.д.
Внутрь основного шаблона встраивают шаблоны с контентом (содержимое страниц).

1. Необходимо создать файл view/layout.php. В котором сделать основной костяк страницы: теги html, head, title, вody
У тебя в main/index.tpl практически и есть основной шаблон. 
Только внутри тега body вместо h1 помести div c id="content"
2. Задача: Переписать метод render() таким образом, чтобы он брал layout.php и внутрь тега <div id="content"></div> 
вставлял содержимое переданного в него шаблона. 
Название шаблона лайаута нужно хранить в приватном свойстве класса под названием layout

То есть после всех манипуляций у тебя в классе View должно быть два свойства:
Одно содержит путь к папке с шаблонами
Второе содержит название основного шаблона (лайаута)


Чуть помогу, потому что этот момент достаточно традно найти.
Когда ты инклудишь любой файл, весь текст, который не входит в теги <?php ?>,
сразу же отправляется в ответ пользователю в браузер как сдержимое.
Поэтому если ты сделаешь include view/main/index.tpl, содержимое этого файла сразу же отправится в браузер.
Потому что файл содержит только голый HTML.

Но в php есть функция ob_start(). (http://us2.php.net/manual/ru/function.ob-start.php)
Смысл функции в том что все print, echo и html который инклудится после ее вызова не отправится в браузер,
а сохранится в память. 
К ней прилагается функция ob_get_contents() (http://php.net/manual/ru/function.ob-get-contents.php)
Она возвращает весь сохраненный с помощью ob_start() вывод и его можно записать в перменную.
И функция ob_end_clean() (http://php.net/manual/ru/function.ob-end-clean.php). 
Она очищает память и заканчивает блок ob_start(), остальной код больше не будет сохранятся в память, 
а будет работать как обычно, то есть сразу выводится в браузер.
Поэтому лучший способ сохранить содержимое шаблона в переменную будет такой:

// Все print и HTML код идущие за функцией ob_start() буферизируются в память. 
// Пока не будет вызвана функция ob_end_clean()
ob_start();
// Содержимое index.tpl попадает в память
include "index.tpl";
// Содержимое layout.php копируется в переменную $content
$content = ob_get_contents();
// Очищаем память и отключаем буферизацию вывода
ob_end_clean();

Еще есть функция file_get_contents() (http://php.net/manual/ru/function.file-get-contents.php)
Казалось бы делает все что нам надо одной строкой.
НО! В дальнейшем в шаблонах нам понадобится отображать пользовательские данные. Например отобразить имя пользователя,
который залогинился. Для этого мы будем выводить переменные через print в шаблонах. 
То есть в шаблонах будет минимум php кода, но все таки будет.
Функция file_get_contents() вернет php код строку и если сделать print этой строки, 
то он так и отобразится в браузере, как просто текст не выполнившись.
Если же выполнить ob_start(), а потом include, то весь код в php шаблоне отработает и все вызовы print запишутся память.
Поэтому метод ob_start() более предпочтительный.
